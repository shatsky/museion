<!DOCTYPE html>
<html>
<head>
<title>{% if title %}{{ title }} - {% endif %}{{ PROJECT_NAME }}</title>
<style type='text/css'>
  body {
    padding: 50px 10px 10px;
  }
  .piece {
    margin-top: 8px;
  }
  .piece_header {
  }
  .title {
    display: inline-block;
    font-weight: bold;
    margin-right: 8px;
  }
  .poetry {
    display: inline-block;
    margin-right: 8px;
  }
  .music {
    display: inline-block;
  }
  .piece_recordings {
  }
  .recording {
  }
  .unknown a {
    color: red;
  }
  .person_image {
    float: left;
    margin: 8px 8px 8px 0px;
  }
</style>
<link rel="icon" type="image/png" href="{{ STATIC_URL }}favicon.png" />
<script src="{{ STATIC_URL }}jquery/jquery.min.js"></script>
<script type="text/javascript" src="{{ STATIC_URL }}jplayer/jquery.jplayer.min.js"></script>
<link href="{{ STATIC_URL }}bootstrap/css/bootstrap.min.css" rel="stylesheet" media="screen">
<script type="text/javascript">
  // AJAX stuff
  function getCookie(name) {
    var cookieValue = null;
    if (document.cookie && document.cookie != '') {
      var cookies = document.cookie.split(';');
      for (var i = 0; i < cookies.length; i++) {
        var cookie = jQuery.trim(cookies[i]);
        // Does this cookie string begin with the name we want?
        if (cookie.substring(0, name.length + 1) == (name + '=')) {
          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
          break;
        }
      }
    }
    return cookieValue;
  }
  var csrftoken = getCookie('csrftoken');
  function csrfSafeMethod(method) {
    // these HTTP methods do not require CSRF protection
    return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
  }
  $.ajaxSetup({
    crossDomain: false, // obviates need for sameOrigin test
    beforeSend: function(xhr, settings) {
      if (!csrfSafeMethod(settings.type)) {
        xhr.setRequestHeader("X-CSRFToken", csrftoken);
      }
    }
  });
  // Playback notifications for statistics
  function ajax_notify(id)
  {
    $.ajax({
      type: 'POST',
      url: '/journal/',
      data: {
        'id': id
      }
    })
  }
  //AJAX navigation with HTML5 History API
  function ajax_navigate(url, nopush, data, method)
  {
    if(typeof(method)=='undefined') method='GET';
    $.ajax({
      data: data,
      type: method,
      url: url,
      cache: true, // doesn't work
      success: function(data, status, xhr){
        // TODO: Check if response contains valid JSON, display error message otherwise
        $('#content').html(data.content);
        document.title=(data.title?data.title+' - ':'')+'{{ PROJECT_NAME }}';
        $("html").scrollTop(0);
        // Update URL and push the history item
        // To make this happen immediately after the click, the following code must be moved to the beginning of ajax_navigate()
        // Problem: it won't work there because the new URL can't be set until we don't have the page title
        // Problem: we want to restore scroll position on history pop event, but to do this, we must set it for state object
        //of the page when we are leaving it, not when we've just loaded it
        if(!nopush)
        {
          history.pushState({url: url}, data.title, url);
          //restore #id of playing recording
        }
      }
      // Display error messages on the request failure
    });
  }
  $(window).bind('popstate', function(event){
    ajax_navigate(event.originalEvent.state.url, true);
  });
  function playfile(filename)
  {
    $('#jquery_jplayer_1').jPlayer('setMedia', {mp3: filename});
    $('#jquery_jplayer_1').jPlayer('play', 0);
    //notify server (for playback statistics)
  }
  // TODO: move messages to low right corner
  function showmessage(text, mode)
  {
    if(mode!='error'&&mode!='success'&&mode!='info') mode='info';
    $('#messages').prepend('<div class="alert alert-'+mode+'"><a class="close" data-dismiss="alert">×</a>'+text+'</div>');
  }
  // Extra elements which show up on mouseover (e. g., edit icons) toggling
  // 'show-extras' class element: shows 'extras' elements in 'hide-extras' block it resides in (can be itself)
  // 'hide-extras' class element: hides 'extras' elements inside its own block
  // e. g. ['hide-extras block' ['show-extras icon'] 'extras 1' 'extras 2' ... ]
  $(document).on('mouseenter', '.show-extras', function(){
    $(this).closest('.hide-extras').find('.extras').css('display', '');
  });
  $(document).on('mouseleave', '.hide-extras', function(){
    $(this).find('.extras').css('display', 'none');
  });
  // Finally...
  $(document).ready(function(){
    // Adapt body padding to navbar height
    // Shouldn't mix JS with CSS this way, must get values from stylesheet and add navbar height to the top one
    $('body').css('padding', ($('.navbar').height()+10)+'px 10px 10px');
    //
    $('body').click(function(event) {
      // Play button
      if($(event.target).hasClass('action-play')){
        playfile($(event.target).closest('a').attr('href'));
        ajax_notify($(event.target).closest('div.recording').data('id'));
        return false;
      }
      // Poetry view button
      else if($(event.target).hasClass('action-poetry-view')){
        $('#modal-poetry-viewer').find('.modal-text-title').html($(event.target).closest('div.piece').find('.title').html());
        $('#modal-poetry-viewer').find('.modal-body').html('');
        // Get text and insert it into the modal
        // TODO: figure out why does the background page change to main if /poetry/<id> is redirected to /
        $.get('/poetry/'+$(event.target).closest('div.poetry').data('id'), function(data) {
          $('#modal-poetry-viewer').find('.modal-body').html(data.replace(/\n/g,'<br>'));
        });
        // Show modal
        // TODO: somewhy the modal shows up before the text is received (confusingly displaying previously viewed text, if we don't clear it first)
        $('#modal-poetry-viewer').modal();
        return false;
      }
      // AJAX'ify links
      // http://docs.jquery.com/Tutorials:AJAX_and_Events
      // Also make foreign links open in a new tab
      // !!! Doesn't work for children inside <a>! Must check not target.is(<a>), but target.hasParent(<a>)
      else link=$(event.target).closest('a'); if(link.length && link.attr('href').charAt(0)=='/') {
        ajax_navigate(link.attr('href'));
        return false;
      }
      //AJAX'ify forms
      else if($(event.target).is('input') && $(event.target).attr('type')=='submit') {
        if(typeof($(event.target).parents('form:first').attr('action'))=='undefined')
          $(event.target).parents('form:first').attr('action', window.location.pathname);
        if($(event.target).parents('form:first').attr('action').charAt(0)=='/')
        {
          ajax_navigate($(event.target).parents('form:first').attr('action'), false, $(event.target).parents('form:first').serialize(), $(event.target).parents('form:first').attr('method'));
          return false;
        }
      }
    });
    //jPlayer stuff
    var	player = $("#jquery_jplayer_1"),
    player_progress=$('.player_progress'); //for performance
    player.jPlayer({
      ready: function () {
        //$("#jp_container .track-default").click();
      },
      //Initially controls are in disabled state, must enable them on canplay event
      loadstart:  function(event) {
        $('.player_play').removeClass('disabled');
        $('.player_bar').css('cursor', 'pointer');
      },
      //Progress bar: sync with current playback time
      timeupdate: function(event) {
        player_progress.css('width', event.jPlayer.status.currentPercentAbsolute+'%');
        //console.log(player_progress.attr('style'));
      },
      //Play/pause button toggling: hide player_play/show player_pause and vice versa
      play: function(event) {
        $('.player_play').css('display', 'none');
        $('.player_pause').css('display', '');
      },
      pause: function(event) {
        $('.player_pause').css('display', 'none');
        $('.player_play').css('display', '');
      },
      volume: 1,
      swfPath: "{{ STATIC_URL }}jplayer/Jplayer.swf"
    });
    //Play/pause click
    $(".player_pause").click(function(event){
      player.jPlayer('pause');
    });
    $(".player_play").click(function(event){
      player.jPlayer('play');
    });
    //Progress bar: click event handler to set time calculated from relative coordinates
    $(".player_bar").click(function(event){
      time=player.data("jPlayer").status.duration*(event.pageX-$(this).offset().left)/$(this).width()
      player.jPlayer('play', time);
    });
  });
</script>
</head>
<body>
<script src="{{ STATIC_URL }}bootstrap/js/bootstrap.min.js"></script>
<div id='header'>
  <div class="navbar navbar-fixed-top">
    <div class="navbar-inner">
      <div class="container" style="width: auto; padding: 0 20px;">
        <ul class="nav">
          <li><a href="/"><i class="icon-home"></i></a></li>
          <li><a href="/people/category/poets" class="ajax">Поэты</a></li>
          <li><a href="/people/category/composers" class="ajax">Композиторы</a></li>
          <li><a href="/people/category/performers" class="ajax">Исполнители</a></li>
          <!--search form-->
          <li>
            <form class="navbar-form pull-right" action="/search/" method="get">
              <div class="input-append" style="margin-bottom:0px;">
                <input class="span2" id="appendedDropdownButton" type="text" name="q" placeholder="Поиск">
                <input type="hidden" name="m" value="t">
                <div class="btn-group">
                  <button class="btn dropdown-toggle" data-toggle="dropdown">
                    <i class="icon-search"></i>
                    <span class="caret"></span>
                  </button>
                  <ul class="dropdown-menu">
                    <li><a href="#" onclick="javascript:ajax_navigate($(this).parents('form:first').attr('action')+'?'+$(this).parents('form:first').serialize())">в названиях</a></li>
                    <li><a href="#">в текстах</a></li>
                    <li><a href="#">в именах</a></li>
                  </ul>
                </div>
              </div>
            </form>
          </li>
          <!--player controls-->
          <li>
            <div id="jquery_jplayer_1" class="jp-jplayer"></div>
          </li>
        </ul>
        <ul class="nav">
          <li>
            <button class="btn player_play disabled"><i class="icon-play"></i></button>
            <button class="btn player_pause" style="display:none"><i class="icon-pause"></i></button>
          </li>
        </ul>
        <ul class="nav">
          <li>
            <div class="progress progress-striped player_bar" style="width:200px;margin-top:10px;margin-bottom:0px;">
              <div class="bar player_progress" style="width:0%;transition:none;-webkit-transition:none;-moz-transition:none;-ms-transition:none;-o-transition:none;transition:none;"></div>
            </div>
          </li>
        </ul>
        <ul class="nav pull-right">
          {% if user.is_authenticated%}
            <li><a href="/accounts/profile"><i class="icon-user"></i>{{ user.username }}</a></li>
            <li><a href="/accounts/logout/">выход</a></li>
          {% else %}
            <li><a href="/accounts/register">регистрация</a></li>
            <li>
              <!--<div class="dropdown">
                <a class="dropdown-toggle" data-toggle="dropdown" href="#">вход</a>
                <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
                форма входа
                </ul>
              </div>-->
              <a href="/accounts/login/">вход</a>
            </li>
          {% endif %}
        </ul>
        <!--<div id='login' style='display:none'>
          <form action='/user/login' method='post'>
            {% csrf_token %}
            Имя: <input type="text" name="login">
            Пароль: <input type="password" name="password">
            <input type="submit" value="Вход">
            <a href="#" onclick='javascript:document.getElementById("login").style.display="none";document.getElementById("search").style.display="block"'>Поиск</a>
          </form>
        </div>-->
      </div>
    </div>
  </div>
  <div id="modal-poetry-viewer" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-header">
      <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
      <b class="modal-text-title"></b>
    </div>
    <div class="modal-body">
    </div>
  </div>
</div>
<div id='main'>
  <div id='messages' style='position:fixed;top:60;left:10;z-index:10;'>
  </div>
  <div id='content'>
    {% block main %}{{ content }}{% endblock %}
  </div>
</div>
<div id='footer'></div>
</body>
</html>
